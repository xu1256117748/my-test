测试进程、线程、线程池(参见幕布文档 API day 15-17 )
进程:指正在运行的程序,具有独立性,动态性,并发性
    进程和程序的区别:
        程序是静态的指令集合,进程是正在活动的指令集合,程序加入了时间的概念以后称之为进程,具有自己的生命周期和各种不同的状态
线程:线程是操作系统能够进行运算调度的最小单位,他被包含在进程之中,是进程中的实际运作单位
        进程是正在活动的指令集合,每个进程都有自己的N个线程,线程是进程的实际运作单位
        一个进程可以开启多个线程,其中有一个主线程来调用本进程中的其他线程
        我们看到的进程之间的切换,切换的其实就是进程中的主线程
        多线程扩展了多进程的概念,使得同一个进程可以同时并发处理多个任务
    进程和线程的关系:
        一个操作系统中可以有多个进程,一个进程可以由一个线程(单线程程序),也可以有多个线程(多线程程序)
        每个线程在共享同一个进程中的内存的同时,又有自己独立的内存空间,所以想使用线程技术,得先有进程,进程的创建是OS操作系统来创建的,一般是C或者C++完成
多线程的特性:
    1.随机性
        一个cpu同时只能处理一件事,宏观上看着多个程序在同时运行,微观上,cpu在进行高效的切换,切换的速度甚至是纳秒级别的
    2.CPU分式调度
        时间片:CPU分配给每个线程的一个时间段
            如果一个线程的时间片用完,该线程还在执行,则cpu会将该线程挂起,
            如果一个线程的时间片用完之前,发生了阻塞或者执行结束,则cpu当即就会进行切换,避免资源浪费
        算法策略:(操作系统自己的规则,无法指定修改)
            FCFS(First come First service) 先来先服务算法
            SJS(Short Job service) 短服务算法
    3.线程的状态
        创建,就绪(可运行),运行中,阻塞,终止
        .

判断有没有可能出现线程安全问题:
    1.程序是多线程程序
    2.有共享数据
    3.多条语句操作共享数据

 创建线程的四种(三种)方式
 1.继承Thread的类
 2.实现Runnable接口
 3.实现callable接口
    tips: Runnable接口不能有返回值，且不能抛出异常，而Callable接口可以
 4.使用线程池,执行任务


 未看的问题:
 1.线程池的第六和第七个参数
 2.synchronized(this)和synchronized(本类.class)的区别
