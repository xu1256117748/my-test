001.java面向对象有哪些特征?

有三大主要特征:  封装,继承和多态
封装:
    概念:把一个对象的属性和方法,结合为一个整体,使用权限修饰符将属性和方法私有化,并提供公开访问方法,尽可能的隐藏该对象的内部实现细节
    优点:
    1.封装体现了程序设计追求高内聚，低耦合的特性
      高内聚：类的内部数据操作自己完成，不允许外部干涉
      低耦合：仅暴露少量的方法给外部使用
    2.当对象的某个属性设置不合理的时候可以通过接口灵活改变
    3.封装类的内部可以自由修改,可以灵活地完善该封装类的实现细节
    4.隐藏代码的实现细节

    四种权限修饰符
        Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持 4 种不同的访问权限。
        public : 对所有类可见。使用对象：类、接口、变量、方法
        protected : 对同一包内的类和所有子类可见。使用对象：变量、方法。 注意：不能修饰类（外部类）。
        default (即默认，什么也不写）: 在同一包内可见，不使用任何修饰符。使用对象：类、接口、变量、方法。
        private : 在同一类内可见。使用对象：变量、方法。 注意：不能修饰类（外部类）

继承:
    概念:继承是从已有的类中派生出新的类，新的类具备原类的属性和行为，并能扩展新的能力

    继承的限制:

    `       虽然继承可以进行类功能的扩充，但是其在定义的时候也是会存在若干种限制的:

        限制一：   一个子类只能够继承一个父类，存在单继承局限。`(一个父类可以被多个子类继承)
        限制二：   在一个子类继承的时候，实际上会继承父类之中的所有属性、方法，
                  但是需要注意的是，对于所有的非私有（no private）操作属于显式继承（可以直接利用对象操作），而所有的私有操作属于隐式继承（间接完成）。
                  参见:TestDemo类
        限制三:    在继承关系之中，如果要实例化子类对象，会默认先调用父类构造，为父类之中的属性初始化，
                  之后再调用子类构造，为子类之中的属性初始化，即：默认情况下，子类会找到父类之中的无参构造方法。

    继承的优点和缺点:
        优点:
        1.代码共享，减少创建类的工作量，每个子类都拥有父类的方法和属性；
        2.提高代码的复用性；
        缺点：
        ● 继承是侵入性的。只要继承，就必须拥有父类的所有属性和方法(私有化的属性和方法为隐性继承,不能直接访问,只能通过暴露出来的方法进行访问)；
        ● 降低代码的灵活性。子类必须拥有父类的属性和方法，让子类自由的世界中多了些约束；
        ● 增强了耦合性。当父类的常量、变量和方法被修改时，需要考虑子类的修改，而且在 缺乏规范的环境下，这种修改可能带来非常糟糕的结果——大段的代码需要重构。
多态:

